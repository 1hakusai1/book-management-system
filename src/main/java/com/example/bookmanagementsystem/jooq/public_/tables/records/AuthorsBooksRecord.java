/*
 * This file is generated by jOOQ.
 */
package com.example.bookmanagementsystem.jooq.public_.tables.records;


import com.example.bookmanagementsystem.jooq.public_.tables.AuthorsBooks;

import java.util.UUID;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuthorsBooksRecord extends UpdatableRecordImpl<AuthorsBooksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.authors_books.author_id</code>.
     */
    public void setAuthorId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.authors_books.author_id</code>.
     */
    public UUID getAuthorId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.authors_books.book_id</code>.
     */
    public void setBookId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.authors_books.book_id</code>.
     */
    public UUID getBookId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorsBooksRecord
     */
    public AuthorsBooksRecord() {
        super(AuthorsBooks.AUTHORS_BOOKS);
    }

    /**
     * Create a detached, initialised AuthorsBooksRecord
     */
    public AuthorsBooksRecord(UUID authorId, UUID bookId) {
        super(AuthorsBooks.AUTHORS_BOOKS);

        setAuthorId(authorId);
        setBookId(bookId);
        resetChangedOnNotNull();
    }
}
